/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hr.edunova.ciklicnatablica;

import java.awt.event.KeyEvent;

/**
 *
 * @author Ivan
 */
public class Prozor extends javax.swing.JFrame {

    /**
     * Creates new form Prozor
     */
    public Prozor() {
        initComponents();
        ucitajPostavke();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUnosi = new javax.swing.JPanel();
        txtBrojStupaca = new javax.swing.JTextField();
        txtBrojRedova = new javax.swing.JTextField();
        btnGeneriraj = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbSmjer = new javax.swing.JComboBox<>();
        cbPocetnaPozicija = new javax.swing.JComboBox<>();
        lblPoruka = new javax.swing.JLabel();
        lblNaslov = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ispis ciklične tablice");
        setMinimumSize(new java.awt.Dimension(712, 308));
        setResizable(false);
        setSize(new java.awt.Dimension(712, 308));

        txtBrojStupaca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBrojStupacaFocusGained(evt);
            }
        });
        txtBrojStupaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBrojStupacaKeyPressed(evt);
            }
        });

        txtBrojRedova.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBrojRedovaFocusGained(evt);
            }
        });
        txtBrojRedova.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBrojRedovaKeyPressed(evt);
            }
        });

        btnGeneriraj.setText("Generiraj tablicu");
        btnGeneriraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerirajActionPerformed(evt);
            }
        });

        jLabel1.setText("Broj redova(2 ili više)");

        jLabel2.setText("Broj supaca(2 ili više)");

        jLabel3.setText("Smjer ispisa");

        jLabel4.setText("Pozicija početka ispisa");

        cbSmjer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Smjer kazaljke na satu", "Suprotno od kazaljke na satu" }));
        cbSmjer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbSmjerKeyPressed(evt);
            }
        });

        cbPocetnaPozicija.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gore lijevo", "Gore desno", "Dolje lijevo", "Dolje desno" }));
        cbPocetnaPozicija.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbPocetnaPozicijaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout pnlUnosiLayout = new javax.swing.GroupLayout(pnlUnosi);
        pnlUnosi.setLayout(pnlUnosiLayout);
        pnlUnosiLayout.setHorizontalGroup(
            pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUnosiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPoruka, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlUnosiLayout.createSequentialGroup()
                        .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(txtBrojRedova, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBrojStupaca)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbSmjer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPocetnaPozicija, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(26, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUnosiLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGeneriraj, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(247, 247, 247))
        );
        pnlUnosiLayout.setVerticalGroup(
            pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUnosiLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUnosiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBrojStupaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBrojRedova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSmjer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPocetnaPozicija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addComponent(btnGeneriraj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPoruka, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        lblNaslov.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        lblNaslov.setForeground(new java.awt.Color(51, 51, 0));
        lblNaslov.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNaslov.setText("Ispis ciklične tablice");
        lblNaslov.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlUnosi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblNaslov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNaslov, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlUnosi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbPocetnaPozicijaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbPocetnaPozicijaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER
            || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            btnGenerirajActionPerformed(null);
        }
    }//GEN-LAST:event_cbPocetnaPozicijaKeyPressed

    private void cbSmjerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbSmjerKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER
            || evt.getKeyCode() == KeyEvent.VK_SPACE) {
            cbPocetnaPozicija.showPopup();
            cbPocetnaPozicija.requestFocus();
        }
    }//GEN-LAST:event_cbSmjerKeyPressed

    private void btnGenerirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerirajActionPerformed
        if (txtBrojRedova.getText().length() > 0
            && txtBrojStupaca.getText().length() > 0) {
            int brojRedova = 0, brojStupaca = 0;
            try {
                brojRedova = Integer.parseInt(txtBrojRedova.getText());
                brojStupaca = Integer.parseInt(txtBrojStupaca.getText());
                if(brojRedova>=2 && brojStupaca>=2){
                    lblPoruka.setText("");
                    Tablica tablica = new Tablica(
                        brojRedova,
                        brojStupaca,
                        cbSmjer.getSelectedIndex(),
                        cbPocetnaPozicija.getSelectedIndex());
                    tablica.kreirajTablicu();
                }else{
                    lblPoruka.setText("I broj redova i broj stupaca moraju biti "
                        + "veći od 2");
                }
            } catch (NumberFormatException e) {
                lblPoruka.setText("Pri unosu broja redova "
                    + "i broja stupaca dopušteni su samo brojevi");
            }
        } else {
            lblPoruka.setText("Obavezno unesite i broj redova i broj stupaca");
        }

    }//GEN-LAST:event_btnGenerirajActionPerformed

    private void txtBrojRedovaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBrojRedovaKeyPressed
        if (txtBrojRedova.getText().length() > 0
            && txtBrojStupaca.getText().length() > 0) {
            lblPoruka.setText("");
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtBrojStupaca.requestFocus();
            txtBrojStupaca.selectAll();
        }
    }//GEN-LAST:event_txtBrojRedovaKeyPressed

    private void txtBrojStupacaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBrojStupacaKeyPressed
        if (txtBrojRedova.getText().length() > 0
            && txtBrojStupaca.getText().length() > 0) {
            lblPoruka.setText("");
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cbSmjer.showPopup();
            cbSmjer.requestFocus();
        }
    }//GEN-LAST:event_txtBrojStupacaKeyPressed

    private void txtBrojRedovaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBrojRedovaFocusGained
        // TODO add your handling code here:
        txtBrojRedova.selectAll();
    }//GEN-LAST:event_txtBrojRedovaFocusGained

    private void txtBrojStupacaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBrojStupacaFocusGained
        // TODO add your handling code here:
        txtBrojStupaca.selectAll();
    }//GEN-LAST:event_txtBrojStupacaFocusGained

    private void ucitajPostavke(){
        setLayout(null);
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGeneriraj;
    private javax.swing.JComboBox<String> cbPocetnaPozicija;
    private javax.swing.JComboBox<String> cbSmjer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblNaslov;
    private javax.swing.JLabel lblPoruka;
    private javax.swing.JPanel pnlUnosi;
    private javax.swing.JTextField txtBrojRedova;
    private javax.swing.JTextField txtBrojStupaca;
    // End of variables declaration//GEN-END:variables
}
